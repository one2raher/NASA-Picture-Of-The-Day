{"version":3,"sources":["hooks/useGetApod.js","components/date-view/APODModal.js","containers/date-view/APODContainer.js","containers/date-view/DateViewContainer.js","panels/Home.js","App.js","index.js"],"names":["useGetApod","date","useState","isGetApodLoading","setIsGetApodLoading","isGetApodLoaded","setIsGetApodLoaded","data","setData","useEffect","a","fetch","response","json","getApod","APODModal","title","explanation","onClose","Layer","onEsc","onClickOutside","Box","align","pad","background","Heading","alignSelf","margin","level","Paragraph","fill","size","Button","label","onClick","weight","color","APODContainer","url","media_type","isAPODModalShow","setIsAPODModalShow","style","overflowY","Image","fit","src","height","width","frameBorder","allow","allowFullScreen","DateViewContainer","Date","toISOString","isoDate","setIsoDate","apodData","dateInstance","yyyy","getFullYear","mm","getMonth","dd","getDate","getAPODDate","round","DateInput","format","value","onChange","event","nextIsoDate","minDate","maxDate","targetDate","getTime","validateAvailableDateRange","alert","required","readOnly","type","MyStyledMain","styled","Main","Home","id","go","fetchedUser","Panel","PanelHeader","App","activePanel","setActivePanel","setUser","ScreenSpinner","popout","setPopout","bridge","send","user","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","View","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e2a0248d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useGetApod = (date) => {\n  const [isGetApodLoading, setIsGetApodLoading] = useState(false);\n  const [isGetApodLoaded, setIsGetApodLoaded] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (!date) return;\n\n    const getApod = async () => {\n      var key = \"iVav1CfgYS95QH5Sqh7DatFQef09QQxLFPqBBRZm\"\n      setIsGetApodLoading(true);\n\n      const response = await fetch(\n        `https://api.nasa.gov/planetary/apod?api_key=${key}&date=${date}`\n      );\n      const data = await response.json();\n\n      setIsGetApodLoading(false);\n      setIsGetApodLoaded(true);\n      setData(data);\n    };\n\n    getApod();\n  }, [date]);\n\n  return { isGetApodLoading, isGetApodLoaded, data };\n};\n\nexport default useGetApod;\n","import { Box, Button, Heading, Layer, Paragraph } from 'grommet';\nimport React from 'react';\n\nconst APODModal = ({ title, date, explanation, onClose }) => {\n  return (\n    <div>\n      <Layer onEsc={onClose} onClickOutside={onClose}>\n        <Box align='center' pad='medium' background='dark-1'>\n          <Heading alignSelf='start' margin='xsmall' level='3'>\n            {title}\n          </Heading>\n          <Paragraph alignSelf='start' margin='xsmall'>\n            {date}\n          </Paragraph>\n          <Paragraph fill margin='xsmall' size='small'>\n            {explanation}\n          </Paragraph>\n        </Box>\n        <Box background='dark-1' pad='medium' align='center'>\n          <Button label='close ' onClick={onClose} size='large' weight='bold' color='accent-2' />\n        </Box>\n      </Layer>\n    </div>\n  );\n};\n\nexport default APODModal;\n","import { Box, Image } from 'grommet';\nimport React, { useState } from 'react';\nimport APODModal from './../../components/date-view/APODModal';\n\nconst APODContainer = ({ title, date, explanation, url, media_type }) => {\n  const [isAPODModalShow, setIsAPODModalShow] = useState();\n\n  const closeAPODModal = () => {\n    setIsAPODModalShow(false);\n  };\n\n  return (\n    <div style={{overflowY: \"auto\"}}>\n      {media_type === 'image' ? (\n        <Box align='center' pad='large' background='dark-2' style={{overflowY: \"auto\"}}>\n          <h2>{title}</h2>\n          <Image fit='cover' src={url} height='80%' width='80%'/>\n          <p>{explanation}</p>\n          <p>{date}</p>\n          {isAPODModalShow && (\n            <APODModal title={title} date={date} explanation={explanation} onClose={closeAPODModal} style={{overflowY: \"auto\"}}/>\n          )}\n        </Box>\n      ) : (\n        <Box align='center' pad='small' size='cover' overflowY=\"auto\">\n          <iframe\n            title={title}\n            src={url}\n            frameBorder='0'\n            allow='autoplay'\n            width='560px'\n            height='315px'\n            allowFullScreen\n          />\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default APODContainer;\n","import { Box, DateInput } from 'grommet';\nimport React, { useState } from 'react';\nimport ReactLoading from 'react-loading';\nimport useGetApod from './../../hooks/useGetApod';\nimport APODContainer from './APODContainer';\n\nconst DateViewContainer = () => {\n  const [isoDate, setIsoDate] = useState(new Date().toISOString());\n\n  const validateAvailableDateRange = (isoDate) => {\n    const minDate = new Date(1995, 5, 16);\n    const maxDate = new Date();\n    const targetDate = new Date(isoDate);\n\n    return targetDate.getTime() >= minDate.getTime() && targetDate.getTime() <= maxDate.getTime();\n  };\n\n  const getAPODDate = (isoDate) => {\n    const dateInstance = new Date(isoDate);\n    const yyyy = dateInstance.getFullYear();\n    const mm = dateInstance.getMonth() + 1 >= 10 ? dateInstance.getMonth() + 1 : `0${dateInstance.getMonth() + 1}`;\n    const dd = dateInstance.getDate() >= 10 ? dateInstance.getDate() - 1 : `0${dateInstance.getDate() - 1}`;\n\n    return `${yyyy}-${mm}-${dd}`;\n  };\n\n  const onDateInputChange = (event) => {\n    const nextIsoDate = event.value;\n\n    if (validateAvailableDateRange(nextIsoDate)) {\n      setIsoDate(nextIsoDate);\n    } else {\n      alert('Date Range : 1995-06-16 ~ Today');\n    }\n  };\n\n  const apodData = useGetApod(getAPODDate(isoDate));\n\n  return (\n    <div>\n      <Box align='center' pad='small' background='dark-2'>\n        <br/>\n        <Box width='medium' background='light-1' round='xsmall'>\n          <DateInput format='mm/dd/yyyy' value={isoDate} onChange={onDateInputChange} required readOnly/>\n        </Box>\n      </Box>\n\n      {apodData.isGetApodLoading ? (\n        <Box align='center' pad='large' background='dark-2'>\n          <ReactLoading type='spin' color='#fff'/>\n        </Box>\n      ) : (\n        <APODContainer\n          title={apodData.data.title}\n          date={apodData.data.date}\n          explanation={apodData.data.explanation}\n          url={apodData.data.url}\n          media_type={apodData.data.media_type}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DateViewContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\n\nimport { Anchor, Grommet, Header, Heading, Main } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport styled from 'styled-components';\nimport DateViewContainer from '../containers/date-view/DateViewContainer';\n\nconst MyStyledMain = styled(Main)`\n  background-color: #555;\n  overflowY: auto;\n`;\n\nconst Home = ({ id, go, fetchedUser }) => {\n\treturn(\n\t\t<Panel id={id} style={{overflowY: \"auto\"}}>\n\t\t\t<PanelHeader>NASA</PanelHeader>\n\t\t\t<MyStyledMain style={{overflowY: \"auto\"}}>\n\t\t\t\t<DateViewContainer/>\n\t\t\t</MyStyledMain>\n\t\t</Panel>\n\t);\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data }}) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id='home' fetchedUser={fetchedUser} go={go} style={{overflowY: \"auto\"}}/>\n    </View>\n  );\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}